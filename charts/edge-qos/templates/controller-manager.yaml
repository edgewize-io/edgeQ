apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-qos-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: edge-qos-controller-manager
    {{- include "edge-qos-controller.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: edge-qos-controller-manager
      {{- include "edge-qos-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: edge-qos-controller-manager
        {{- include "edge-qos-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "edge-qos-controller.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "edge-qos-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "edge-qos-controller"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ template "edge-qos-controller.image" . }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: https
              containerPort: {{ .Values.service.webhook.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: controller-config
              mountPath: /etc/edge-qos-controller
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: controller-config
          configMap:
            name: edge-qos-controller
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
