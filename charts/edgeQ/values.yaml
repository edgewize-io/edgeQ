# Default values for edge-qos-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

imagePullPolicy: "IfNotPresent"
imageRegistry: "harbor.dev.thingsdao.com"
imagePullSecrets:
  - name: edge-deploy-secret


imageReference:
  edgeQosController:
    name: "edgewize/edge-qos-controller"
    tag: "20240913-2300"
    imagePullSecrets: []
  edgeQosProxy:
    name: "edgewize/edge-qos-proxy"
    tag: "20240913-2300"
  edgeQosBroker:
    name: "edgewize/edge-qos-broker"
    tag: "20240913-2300"
  initIptables:
    name: "edgewize/init-iptables"
    tag: "v0.0.1"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8444

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/edge
              operator: DoesNotExist

edgeQosProxy:
  conf:
    base:
      profpathprefix: debug
      loglevel: info
      profenable: false
      tracerenable: false
      whitelist: [ ]
      endpoints: [ ]
      baseconfig: ""
    proxyServer:
      addr: 0.0.0.0:15051
      timeout: 1s
      idletimeout: 1m0s
      maxlifetime: 2h0m0s
      forceclosewait: 20s
      keepaliveinterval: 1m0s
      keepalivetimeout: 20s
      maxmessagesize: 102428800
      maxconcurrentstreams: 1024
      enableopentracing: false
    dispatch:
      queue:
        size: 10
      client:
        addr: "" # NodeIP:HostPort e.g. 172.31.18.13:32995
        timeout: 5s
    serviceGroup:
      name: pay

edgeQosBroker:
  conf:
    promMetrics:
      addr: 0.0.0.0:5501
      scrapeInterval: 1m
    base:
      profpathprefix: debug
      loglevel: info
      profenable: false
      tracerenable: false
      whitelist: [ ]
      endpoints: [ ]
      baseconfig: ""
    brokerServer:
      addr: 0.0.0.0:15050
      timeout: 3s
      idletimeout: 1m0s
      maxlifetime: 2h0m0s
      forceclosewait: 20s
      keepaliveinterval: 1m0s
      keepalivetimeout: 20s
      maxmessagesize: 102428800
      maxconcurrentstreams: 1024
      enableopentracing: false
    schedule:
      method: WRR
    queue:
      size: 10
    dispatch:
      queue:
        size: 10
      client:
        addr: "" # 127.0.0.1:<User Model Container ContainerPort>
        timeout: 5s
    serviceGroups:
      - name: default
        weight: 100
      - name: pay
        weight: 20
      - name: security
        weight: 400
